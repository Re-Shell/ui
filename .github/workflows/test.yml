name: Test Re-Shell UI

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/ui/**'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/ui/**'

defaults:
  run:
    working-directory: packages/ui

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run unit tests with coverage
        run: pnpm test:coverage
      
      - name: Generate coverage report
        run: |
          node -e "
          const { CoverageReportParser, CoverageReportGenerator } = require('./tests/coverage/coverage-reporter');
          const parser = new CoverageReportParser();
          const generator = new CoverageReportGenerator();
          const coverage = parser.parseLcovFile('./coverage/lcov.info');
          generator.generateReport(coverage);
          "
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
      
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ matrix.node-version }}
          path: |
            packages/ui/coverage/
            packages/ui/badges/

  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright browsers
        run: pnpm playwright install --with-deps
      
      - name: Run visual tests
        run: pnpm test:visual
      
      - name: Upload visual test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: visual-test-results
          path: packages/ui/test-results/

  cross-browser-tests:
    name: Cross-Browser Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        browser: [chromium, firefox, webkit]
        exclude:
          - os: windows-latest
            browser: webkit
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright
        run: pnpm playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run cross-browser tests
        run: pnpm test:cross-browser -- --project=${{ matrix.browser }}
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: cross-browser-results-${{ matrix.os }}-${{ matrix.browser }}
          path: packages/ui/test-results/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run performance tests
        run: pnpm test:performance
      
      - name: Analyze performance results
        run: |
          echo "## Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "Results saved to test-results/performance" >> $GITHUB_STEP_SUMMARY

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright
        run: pnpm playwright install --with-deps chromium
      
      - name: Run accessibility tests
        run: pnpm test -- tests/utils/accessibility.ts
      
      - name: Generate accessibility report
        run: |
          echo "## Accessibility Test Results" >> $GITHUB_STEP_SUMMARY
          echo "WCAG 2.1 AA compliance checked" >> $GITHUB_STEP_SUMMARY

  mutation-tests:
    name: Mutation Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run mutation tests
        run: pnpm test:mutation
        continue-on-error: true
      
      - name: Upload mutation report
        uses: actions/upload-artifact@v3
        with:
          name: mutation-report
          path: packages/ui/test-results/mutation/

  mobile-tests:
    name: Mobile Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright with devices
        run: pnpm playwright install --with-deps
      
      - name: Run mobile tests
        run: pnpm test:mobile
      
      - name: Upload mobile test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: mobile-test-results
          path: packages/ui/test-results/

  test-summary:
    name: Test Summary
    needs: [unit-tests, visual-tests, cross-browser-tests, performance-tests, accessibility-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      
      - name: Generate test summary
        run: |
          echo "# Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Unit Tests: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Visual Tests: ${{ needs.visual-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cross-Browser Tests: ${{ needs.cross-browser-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Tests: ${{ needs.performance-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility Tests: ${{ needs.accessibility-tests.result }}" >> $GITHUB_STEP_SUMMARY
      
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const summary = `## Test Results
            
            | Test Suite | Status |
            |------------|--------|
            | Unit Tests | ${{ needs.unit-tests.result }} |
            | Visual Tests | ${{ needs.visual-tests.result }} |
            | Cross-Browser Tests | ${{ needs.cross-browser-tests.result }} |
            | Performance Tests | ${{ needs.performance-tests.result }} |
            | Accessibility Tests | ${{ needs.accessibility-tests.result }} |
            
            View full test reports in the Actions artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });